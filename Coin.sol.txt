// Developed by : Bloque Labs Private Limited Â© 2019
// 
// Developer : 
// Vikas Singh 
// 
// Code Taken From : 
// https://solidity.readthedocs.io/en/v0.5.9/introduction-to-smart-contracts.html#subcurrency-example
// 
// Word of caution:
// Code might be changed due to continuos improvements in the Solidity compiler 

pragma solidity ^0.5.9;

contract Coin {
    // The keyword "public" makes those variables
    // readable from outside.
    
    address public minter; // a getter function shall be automatically provided to us to query its value
    
    mapping (address => uint) public balances; // step 1 - declaration
    // balances[avinash add] = 10; // - using in solidity 
    // balances[vikas add] = 20;
    // balances[murali add] = 30;
   
    event Sent(address indexed from, address indexed to, uint amount); // max 5 parameter, max 3 indexed parameter, you can't have a parameter of array of string
    event CoinMinted (address indexed to, uint indexed amount ) ; //can't put indexed in from of string 
    // This is the constructor whose code is
    // run only when the contract is created.
    
    
    /*
    Serving the HTML files from the Server is important
    for serving files from http server:
    step 1 : install python
    step 2: python -m http.server
    */
   
    
    constructor() public {
        minter = msg.sender;
    }

    function mint(address receiver, uint amount) public {
        if (msg.sender != minter) return; // this function can only be accessed by minter
        balances[receiver] += amount;
        emit CoinMinted( receiver, amount);
    }

    function send(address receiver, uint amount) public {
        if (balances[msg.sender] < amount) return;
        balances[msg.sender] -= amount;
        balances[receiver] += amount;
        
        emit Sent(msg.sender, receiver, amount); // logging mechanism - 
    }
    
}